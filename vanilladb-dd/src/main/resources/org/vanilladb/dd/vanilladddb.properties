# 
# VanillaDdDb configuration file
# 
# This file is a single place for controlling all constant fields defined in 
# VanillaDdDB classes. The path of this file should be set as a system property
# keyed "org.vanilladb.dd.config.file" so the content will to be 
# processed during VanillaDdDB initiation.
#


#
# Server package settings
#

# The type of transaction execution engine. 
# Currently supported types are fully replicated d.d. database (0), Calvin style
# partitioned d.d. database (1), ODA style partitioned d.d database (2)
# and T-Part style partitioned d.d. database (3).
org.vanilladb.dd.server.VanillaDdDb.SERVICE_TYPE=2

# The partition metadata manager
org.vanilladb.dd.server.VanillaDdDb.PARTITION_META_MGR=org.vanilladb.dd.storage.metadata.HashBasedPartitionMetaMgr
#org.vanilladb.dd.server.VanillaDdDb.HAS_REORDERING=false
#org.vanilladb.dd.server.VanillaDdDb.HAS_REPLICATION=false
#org.vanilladb.dd.server.VanillaDdDb.REPLCATION_AND_PARTITION_META_MGR=netdb.software.benchmark.tpcc.vanilladddb.metadata.RepMicroBenchPartitionMetaMgr


#
# Cache package settings
#

# The ODA-Style cache manager setting
org.vanilladb.dd.cache.oda.OdaCacheMgr.THRESHOLD=2
org.vanilladb.dd.cache.oda.OdaCacheMgr.MAX_RECORD=5000


#
# Schedule package settings
#

# The stored procedure factory class of different types of scheduler
org.vanilladb.dd.schedule.naive.NaiveScheduler.FACTORY_CLASS=netdb.software.benchmark.tpcc.procedure.vanilladddb.TpccStoredProcFactory
org.vanilladb.dd.schedule.calvin.CalvinScheduler.FACTORY_CLASS=org.vanilladb.dd.schedule.calvin.CalvinStoredProcedureFactory
org.vanilladb.dd.schedule.oda.OdaScheduler.FACTORY_CLASS=org.vanilladb.dd.schedule.oda.OdaStoredProcedureFactory
org.vanilladb.dd.schedule.tpart.TPartPartitioner.FACTORY_CLASS=org.vanilladb.dd.schedule.tpart.TPartStoredProcedureFactory
#org.vanilladb.dd.schedule.tpart.replication.ReplicatedTPartPartitioner.FACTORY_CLASS=netdb.software.benchmark.tpcc.procedure.vanilladddb.tpart.TpccStoredProcFactory


#
# Metadata package settings
#
org.vanilladb.dd.storage.metadata.PartitionMetaMgr.NUM_PARTITIONS=1


#
# Comm pacakge settings
#

# The number of requests in a batch. If the # of real requests is less than
# batch size, the no operation request will be pended in that batch.
org.vanilladb.dd.remote.groupcomm.client.BatchGcConnection.BATCH_SIZE=20


# ==================
# Un-used properties
# ==================

#
# T-Part settings
#
org.vanilladb.dd.schedule.tpart.TPartPartitioner.NUM_PARTITIONS=2
org.vanilladb.dd.schedule.tpart.TPartPartitioner.NUM_TASK_PER_SINK=10
org.vanilladb.dd.schedule.tpart.TPartPartitioner.COST_FUNC_CLS=org.vanilladb.dd.schedule.tpart.CostFunctionCalculator
org.vanilladb.dd.schedule.tpart.CostFunctionCalculator.BETA=0.7

#
# T-Part with replication settings
#
org.vanilladb.dd.schedule.tpart.replication.ReplicatedTPartPartitioner.NUM_PARTITIONS=3
org.vanilladb.dd.schedule.tpart.replication.ReplicatedTPartPartitioner.NUM_TASK_PER_SINK=5
org.vanilladb.dd.schedule.tpart.replication.ReplicatedTPartPartitioner.COST_FUNC_CLS=org.vanilladb.dd.schedule.tpart.replication.ReplicatedCostFunctionCalculator
org.vanilladb.dd.schedule.tpart.replication.ReplicatedTPartPartitioner.BETA=0.7

